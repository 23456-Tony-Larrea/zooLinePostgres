<link href="~/css/Mensajes.css" rel="stylesheet"/> 

<div class="form-group">
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="font-weight-bold">Usuario</div>
            <br/>
            <input type="text" id="userInput" class="form-control"/>
        </div>
        <div class="row">
            <div class="font-weight-bold">Mensaje</div>
            <textarea class="form-control"id="messageInput"></textarea>
        </div>
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="form-group">
                <button type="button" id="sendButton" class ="btn btn-success"><i class="fab fa-facebook-messenger"></i>Enviar Mensaje</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
"use strict";

var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

//Disable the send button until connection is established.
document.getElementById("sendButton").disabled = true;

connection.on("ReceiveMessage", function (user, message) {
    var li = document.createElement("li");
    document.getElementById("messagesList").appendChild(li);
    // We can assign user-supplied strings to an element's textContent because it
    // is not interpreted as markup. If you're assigning in any other way, you 
    // should be aware of possible script injection concerns.
    li.textContent = `${user} dice ${message}`;
});

connection.start().then(function () {
    document.getElementById("sendButton").disabled = false;
}).catch(function (err) {
    return console.error(err.toString());
});

document.getElementById("sendButton").addEventListener("click", function (event) {
    var user = document.getElementById("userInput").value;
    var message = document.getElementById("messageInput").value;
    connection.invoke("EnviarMensaje", user, message).catch(function (err) {
        return console.error(err.toString());
    });
    event.preventDefault();
});
</script>
   
